
running 1 test
[BUS] Simulator -> Replica(1) QUEUED StartProposal(V(1, 0)) 
[BUS] Simulator -> Replica(2) QUEUED StartProposal(V(2, 1)) 
[BUS] Simulator -> Replica(1) RECEIVED StartProposal(V(1, 0))
[BUS] Replica(1) -> Replica(1) QUEUED Prepare(RID(R1, P1))
[BUS] Replica(1) -> Replica(2) QUEUED Prepare(RID(R1, P1))
[BUS] Replica(1) -> Replica(3) QUEUED Prepare(RID(R1, P1))
[BUS] Replica(1) -> Replica(3) RECEIVED Prepare(RID(R1, P1))
[BUS] Replica(3) -> Replica(1) QUEUED PrepareResponse(RID(R1, P1), None, None)
[BUS] Simulator -> Replica(2) RECEIVED StartProposal(V(2, 1))
[BUS] Replica(2) -> Replica(1) QUEUED Prepare(RID(R2, P1))
[BUS] Replica(2) -> Replica(2) QUEUED Prepare(RID(R2, P1))
[BUS] Replica(2) -> Replica(3) QUEUED Prepare(RID(R2, P1))
[BUS] Replica(2) -> Replica(3) RECEIVED Prepare(RID(R2, P1))
[BUS] Replica(3) -> Replica(2) QUEUED PrepareResponse(RID(R2, P1), None, None)
[BUS] Replica(3) -> Replica(1) RECEIVED PrepareResponse(RID(R1, P1), None, None)
[BUS] Replica(3) -> Replica(2) RECEIVED PrepareResponse(RID(R2, P1), None, None)
[BUS] Replica(1) -> Replica(2) RECEIVED Prepare(RID(R1, P1))
[BUS] Replica(2) -> Replica(1) QUEUED PrepareResponse(RID(R1, P1), None, None)
[BUS] Replica(2) -> Replica(1) RECEIVED PrepareResponse(RID(R1, P1), None, None)
[BUS] Replica(1) -> Replica(1) QUEUED Accept(RID(R1, P1), 1, V(1, 0))
[BUS] Replica(1) -> Replica(2) QUEUED Accept(RID(R1, P1), 1, V(1, 0))
[BUS] Replica(1) -> Replica(3) QUEUED Accept(RID(R1, P1), 1, V(1, 0))
[BUS] Replica(2) -> Replica(1) RECEIVED Prepare(RID(R2, P1))
[BUS] Replica(1) -> Replica(2) QUEUED PrepareResponse(RID(R2, P1), None, None)
[BUS] Replica(1) -> Replica(3) RECEIVED Accept(RID(R1, P1), 1, V(1, 0))
[BUS] Replica(3) -> Replica(1) QUEUED AcceptResponse(RID(R1, P1), 1)
[BUS] Replica(1) -> Replica(1) RECEIVED Prepare(RID(R1, P1))
[BUS] Replica(1) -> Replica(1) QUEUED PrepareResponse(RID(R1, P1), None, None)
[BUS] Replica(1) -> Replica(1) RECEIVED PrepareResponse(RID(R1, P1), None, None)
[BUS] Replica(1) -> Replica(1) RECEIVED Accept(RID(R1, P1), 1, V(1, 0))
[BUS] Replica(1) -> Replica(1) QUEUED AcceptResponse(RID(R1, P1), 1)
[BUS] Replica(1) -> Replica(2) RECEIVED PrepareResponse(RID(R2, P1), None, None)
[BUS] Replica(2) -> Replica(1) QUEUED Accept(RID(R2, P1), 1, V(2, 1))
[BUS] Replica(2) -> Replica(2) QUEUED Accept(RID(R2, P1), 1, V(2, 1))
[BUS] Replica(2) -> Replica(3) QUEUED Accept(RID(R2, P1), 1, V(2, 1))
[BUS] Replica(2) -> Replica(3) RECEIVED Accept(RID(R2, P1), 1, V(2, 1))
[BUS] Replica(3) -> Replica(2) QUEUED AcceptResponse(RID(R2, P1), 1)
[BUS] Replica(1) -> Replica(2) RECEIVED Accept(RID(R1, P1), 1, V(1, 0))
[BUS] Replica(2) -> Replica(1) QUEUED AcceptResponse(RID(R1, P1), 1)
[BUS] Replica(2) -> Replica(2) RECEIVED Accept(RID(R2, P1), 1, V(2, 1))
[BUS] Replica(2) -> Replica(2) QUEUED AcceptResponse(RID(R2, P1), 1)
[BUS] Replica(2) -> Replica(1) RECEIVED Accept(RID(R2, P1), 1, V(2, 1))
[BUS] Replica(1) -> Replica(2) QUEUED AcceptResponse(RID(R2, P1), 1)
[BUS] Replica(3) -> Replica(2) RECEIVED AcceptResponse(RID(R2, P1), 1)
[BUS] Replica(1) -> Replica(1) RECEIVED AcceptResponse(RID(R1, P1), 1)
[BUS] Replica(2) -> Replica(2) RECEIVED Prepare(RID(R2, P1))
[BUS] Replica(2) -> Replica(2) QUEUED PrepareResponse(RID(R2, P1), Some(1), Some("V(2, 1)"))
[BUS] Replica(1) -> Replica(2) RECEIVED AcceptResponse(RID(R2, P1), 1)
[ORACLE] value accepted by majority of replicas: majority=2 RID(R2, P1) value=V(2, 1) replicas=[1, 3]
[BUS] Replica(2) -> Replica(2) RECEIVED PrepareResponse(RID(R2, P1), Some(1), Some("V(2, 1)"))
[BUS] Replica(2) -> Replica(2) RECEIVED AcceptResponse(RID(R2, P1), 1)
[ORACLE] value accepted by majority of replicas: majority=2 RID(R2, P1) value=V(2, 1) replicas=[1, 2, 3]
[BUS] Replica(3) -> Replica(1) RECEIVED AcceptResponse(RID(R1, P1), 1)
[ORACLE] value accepted by majority of replicas: majority=2 RID(R1, P1) value=V(1, 0) replicas=[3, 1]
